Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: ε
    3           | statements statement ENDSTMT

    4 statement: ε
    5          | declaration
    6          | assignment

    7 declaration: LET IDENTIFIER ':' TYPEDEF '=' expression

    8 assignment: IDENTIFIER '=' expression

    9 expression: INTEGER


Terminals, with rules where they appear

    $end (0) 0
    ':' (58) 7
    '=' (61) 7 8
    error (256)
    LET (258) 7
    ENDSTMT (259) 3
    IDENTIFIER <string> (260) 7 8
    TYPEDEF <string> (261) 7
    INTEGER <integer> (262) 9


Nonterminals, with rules where they appear

    $accept (10)
        on left: 0
    program (11)
        on left: 1
        on right: 0
    statements (12)
        on left: 2 3
        on right: 1 3
    statement (13)
        on left: 4 5 6
        on right: 3
    declaration <a> (14)
        on left: 7
        on right: 5
    assignment <a> (15)
        on left: 8
        on right: 6
    expression <a> (16)
        on left: 9
        on right: 7 8


State 0

    0 $accept: • program $end

    $default  reduce using rule 2 (statements)

    program     go to state 1
    statements  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: statements •
    3 statements: statements • statement ENDSTMT

    LET         shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    ENDSTMT   reduce using rule 4 (statement)
    $default  reduce using rule 1 (program)

    statement    go to state 6
    declaration  go to state 7
    assignment   go to state 8


State 3

    0 $accept: program $end •

    $default  accept


State 4

    7 declaration: LET • IDENTIFIER ':' TYPEDEF '=' expression

    IDENTIFIER  shift, and go to state 9


State 5

    8 assignment: IDENTIFIER • '=' expression

    '='  shift, and go to state 10


State 6

    3 statements: statements statement • ENDSTMT

    ENDSTMT  shift, and go to state 11


State 7

    5 statement: declaration •

    $default  reduce using rule 5 (statement)


State 8

    6 statement: assignment •

    $default  reduce using rule 6 (statement)


State 9

    7 declaration: LET IDENTIFIER • ':' TYPEDEF '=' expression

    ':'  shift, and go to state 12


State 10

    8 assignment: IDENTIFIER '=' • expression

    INTEGER  shift, and go to state 13

    expression  go to state 14


State 11

    3 statements: statements statement ENDSTMT •

    $default  reduce using rule 3 (statements)


State 12

    7 declaration: LET IDENTIFIER ':' • TYPEDEF '=' expression

    TYPEDEF  shift, and go to state 15


State 13

    9 expression: INTEGER •

    $default  reduce using rule 9 (expression)


State 14

    8 assignment: IDENTIFIER '=' expression •

    $default  reduce using rule 8 (assignment)


State 15

    7 declaration: LET IDENTIFIER ':' TYPEDEF • '=' expression

    '='  shift, and go to state 16


State 16

    7 declaration: LET IDENTIFIER ':' TYPEDEF '=' • expression

    INTEGER  shift, and go to state 13

    expression  go to state 17


State 17

    7 declaration: LET IDENTIFIER ':' TYPEDEF '=' expression •

    $default  reduce using rule 7 (declaration)
